% Generated by IEEEtran.bst, version: 1.12 (2007/01/11)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{arp2014drebin}
D.~Arp, M.~Spreitzenbarth, M.~Hubner, H.~Gascon, K.~Rieck, and C.~Siemens,
  ``Drebin: Effective and explainable detection of android malware in your
  pocket.'' in \emph{Ndss}, vol.~14, 2014, pp. 23--26.

\bibitem{raff2018malware}
E.~Raff, J.~Barker, J.~Sylvester, R.~Brandon, B.~Catanzaro, and C.~K. Nicholas,
  ``Malware detection by eating a whole exe,'' in \emph{Workshops at the
  Thirty-Second AAAI Conference on Artificial Intelligence}, 2018.

\bibitem{anderson2018ember}
H.~S. Anderson and P.~Roth, ``Ember: an open dataset for training static pe
  malware machine learning models,'' \emph{arXiv preprint arXiv:1804.04637},
  2018.

\bibitem{szegedy2013intriguing}
C.~Szegedy, W.~Zaremba, I.~Sutskever, J.~Bruna, D.~Erhan, I.~Goodfellow, and
  R.~Fergus, ``Intriguing properties of neural networks,'' \emph{arXiv preprint
  arXiv:1312.6199}, 2013.

\bibitem{ling2021adversarial}
X.~Ling, L.~Wu, J.~Zhang, Z.~Qu, W.~Deng, X.~Chen, C.~Wu, S.~Ji, T.~Luo, J.~Wu
  \emph{et~al.}, ``Adversarial attacks against windows pe malware detection: A
  survey of the state-of-the-art,'' \emph{arXiv preprint arXiv:2112.12310},
  2021.

\bibitem{maiorca2019towards}
D.~Maiorca, B.~Biggio, and G.~Giacinto, ``Towards adversarial malware
  detection: Lessons learned from pdf-based attacks,'' \emph{ACM Computing
  Surveys (CSUR)}, vol.~52, no.~4, pp. 1--36, 2019.

\bibitem{park2020survey}
D.~Park and B.~Yener, ``A survey on practical adversarial examples for malware
  classifiers,'' in \emph{Reversing and Offensive-oriented Trends Symposium},
  2020, pp. 23--35.

\bibitem{li2021arms}
D.~Li, Q.~Li, Y.~Ye, and S.~Xu, ``Arms race in adversarial malware detection: A
  survey,'' \emph{ACM Computing Surveys (CSUR)}, vol.~55, no.~1, pp. 1--35,
  2021.

\bibitem{li2021framework}
------, ``A framework for enhancing deep neural networks against adversarial
  malware,'' \emph{IEEE Transactions on Network Science and Engineering},
  vol.~8, no.~1, pp. 736--750, 2021.

\bibitem{vaswani2017attention}
A.~Vaswani, N.~Shazeer, N.~Parmar, J.~Uszkoreit, L.~Jones, A.~N. Gomez,
  {\L}.~Kaiser, and I.~Polosukhin, ``Attention is all you need,''
  \emph{Advances in neural information processing systems}, vol.~30, 2017.

\bibitem{peters2018deep}
\BIBentryALTinterwordspacing
M.~E. Peters, M.~Neumann, M.~Iyyer, M.~Gardner, C.~Clark, K.~Lee, and
  L.~Zettlemoyer, ``Deep contextualized word representations,'' 2018. [Online].
  Available: \url{https://arxiv.org/abs/1802.05365}
\BIBentrySTDinterwordspacing

\bibitem{radford2018improving}
A.~Radford, K.~Narasimhan, T.~Salimans, I.~Sutskever \emph{et~al.}, ``Improving
  language understanding by generative pre-training,'' 2018.

\bibitem{devlin2018bert}
J.~Devlin, M.-W. Chang, K.~Lee, and K.~Toutanova, ``Bert: Pre-training of deep
  bidirectional transformers for language understanding,'' \emph{arXiv preprint
  arXiv:1810.04805}, 2018.

\bibitem{feng2020codebert}
Z.~Feng, D.~Guo, D.~Tang, N.~Duan, X.~Feng, M.~Gong, L.~Shou, B.~Qin, T.~Liu,
  D.~Jiang \emph{et~al.}, ``Codebert: A pre-trained model for programming and
  natural languages,'' \emph{arXiv preprint arXiv:2002.08155}, 2020.

\bibitem{chen2021evaluating}
M.~Chen, J.~Tworek, H.~Jun, Q.~Yuan, H.~P. d.~O. Pinto, J.~Kaplan, H.~Edwards,
  Y.~Burda, N.~Joseph, G.~Brockman \emph{et~al.}, ``Evaluating large language
  models trained on code,'' \emph{arXiv preprint arXiv:2107.03374}, 2021.

\bibitem{roziere2020unsupervised}
B.~Roziere, M.-A. Lachaux, L.~Chanussot, and G.~Lample, ``Unsupervised
  translation of programming languages,'' \emph{Advances in Neural Information
  Processing Systems}, vol.~33, pp. 20\,601--20\,611, 2020.

\bibitem{xu2017neural}
X.~Xu, C.~Liu, Q.~Feng, H.~Yin, L.~Song, and D.~Song, ``Neural network-based
  graph embedding for cross-platform binary code similarity detection,'' in
  \emph{Proceedings of the 2017 ACM SIGSAC Conference on Computer and
  Communications Security}, 2017, pp. 363--376.

\bibitem{chua2017neural}
Z.~L. Chua, S.~Shen, P.~Saxena, and Z.~Liang, ``Neural nets can learn function
  type signatures from binaries,'' in \emph{26th USENIX Security Symposium
  (USENIX Security 17)}, 2017, pp. 99--116.

\bibitem{guo2019deepvsa}
W.~Guo, D.~Mu, X.~Xing, M.~Du, and D.~Song, ``$\{$DEEPVSA$\}$: Facilitating
  value-set analysis with deep learning for postmortem program analysis,'' in
  \emph{28th USENIX Security Symposium (USENIX Security 19)}, 2019, pp.
  1787--1804.

\bibitem{raff2021classifying}
E.~Raff, W.~Fleshman, R.~Zak, H.~S. Anderson, B.~Filar, and M.~McLean,
  ``Classifying sequences of extreme length with constant memory applied to
  malware detection,'' in \emph{Proceedings of the AAAI Conference on
  Artificial Intelligence}, vol.~35, no.~11, 2021, pp. 9386--9394.

\bibitem{li2021palmtree}
X.~Li, Y.~Qu, and H.~Yin, ``Palmtree: learning an assembly language model for
  instruction embedding,'' in \emph{Proceedings of the 2021 ACM SIGSAC
  Conference on Computer and Communications Security}, 2021, pp. 3236--3251.

\bibitem{artuso2022binbert}
F.~Artuso, M.~Mormando, G.~A. Di~Luna, and L.~Querzoni, ``Binbert: Binary code
  understanding with a fine-tunable and execution-aware transformer,''
  \emph{arXiv preprint arXiv:2208.06692}, 2022.

\bibitem{liguori2022can}
P.~Liguori, E.~Al-Hossami, D.~Cotroneo, R.~Natella, B.~Cukic, and S.~Shaikh,
  ``Can we generate shellcodes via natural language? an empirical study,''
  \emph{Automated Software Engineering}, vol.~29, no.~1, pp. 1--34, 2022.

\bibitem{guzman2019flores}
F.~Guzm{\'a}n, P.-J. Chen, M.~Ott, J.~Pino, G.~Lample, P.~Koehn, V.~Chaudhary,
  and M.~Ranzato, ``The flores evaluation datasets for low-resource machine
  translation: Nepali-english and sinhala-english,'' \emph{arXiv preprint
  arXiv:1902.01382}, 2019.

\bibitem{vincent2010stacked}
P.~Vincent, H.~Larochelle, I.~Lajoie, Y.~Bengio, P.-A. Manzagol, and L.~Bottou,
  ``Stacked denoising autoencoders: Learning useful representations in a deep
  network with a local denoising criterion.'' \emph{Journal of machine learning
  research}, vol.~11, no.~12, 2010.

\bibitem{sennrich2015improving}
R.~Sennrich, B.~Haddow, and A.~Birch, ``Improving neural machine translation
  models with monolingual data,'' \emph{arXiv preprint arXiv:1511.06709}, 2015.

\bibitem{lample2017unsupervised}
G.~Lample, A.~Conneau, L.~Denoyer, and M.~Ranzato, ``Unsupervised machine
  translation using monolingual corpora only,'' \emph{arXiv preprint
  arXiv:1711.00043}, 2017.

\bibitem{artetxe2017unsupervised}
M.~Artetxe, G.~Labaka, E.~Agirre, and K.~Cho, ``Unsupervised neural machine
  translation,'' \emph{arXiv preprint arXiv:1710.11041}, 2017.

\bibitem{roziere2021dobf}
M.-A. Lachaux, B.~Roziere, M.~Szafraniec, and G.~Lample, ``Dobf: A
  deobfuscation pre-training objective for programming languages,''
  \emph{Advances in Neural Information Processing Systems}, vol.~34, pp.
  14\,967--14\,979, 2021.

\bibitem{roziere2021leveraging}
B.~Roziere, J.~M. Zhang, F.~Charton, M.~Harman, G.~Synnaeve, and G.~Lample,
  ``Leveraging automated unit tests for unsupervised code translation,''
  \emph{arXiv preprint arXiv:2110.06773}, 2021.

\bibitem{ahmad2022summarize}
W.~U. Ahmad, S.~Chakraborty, B.~Ray, and K.-W. Chang, ``Summarize and generate
  to back-translate: Unsupervised translation of programming languages,''
  \emph{arXiv preprint arXiv:2205.11116}, 2022.

\bibitem{yewale2016malware}
A.~Yewale and M.~Singh, ``Malware detection based on opcode frequency,'' in
  \emph{2016 International Conference on Advanced Communication Control and
  Computing Technologies (ICACCCT)}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2016, pp. 646--649.

\bibitem{kucuk2020deceiving}
Y.~Kucuk and G.~Yan, ``Deceiving portable executable malware classifiers into
  targeted misclassification with practical adversarial examples,'' in
  \emph{Proceedings of the Tenth ACM Conference on Data and Application
  Security and Privacy}, 2020, pp. 341--352.

\bibitem{li2020adversarial}
X.~Li, K.~Qiu, C.~Qian, and G.~Zhao, ``An adversarial machine learning method
  based on opcode n-grams feature in malware detection,'' in \emph{2020 IEEE
  Fifth International Conference on Data Science in Cyberspace (DSC)}.\hskip
  1em plus 0.5em minus 0.4em\relax IEEE, 2020, pp. 380--387.

\bibitem{kitaev2020reformer}
N.~Kitaev, L.~Kaiser, and A.~Levskaya, ``Reformer: The efficient transformer,''
  \emph{arXiv preprint arXiv:2001.04451}, 2020.

\bibitem{coull2019activation}
S.~E. Coull and C.~Gardner, ``Activation analysis of a byte-based deep neural
  network for malware classification,'' in \emph{2019 IEEE Security and Privacy
  Workshops (SPW)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp.
  21--27.

\bibitem{demetrio2019explaining}
L.~Demetrio, B.~Biggio, G.~Lagorio, F.~Roli, and A.~Armando, ``Explaining
  vulnerabilities of deep learning to adversarial malware binaries,''
  \emph{arXiv preprint arXiv:1901.03583}, 2019.

\bibitem{bose2020explaining}
S.~Bose, T.~Barao, and X.~Liu, ``Explaining ai for malware detection: Analysis
  of mechanisms of malconv,'' in \emph{2020 International Joint Conference on
  Neural Networks (IJCNN)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2020,
  pp. 1--8.

\bibitem{shin2015recognizing}
E.~C.~R. Shin, D.~Song, and R.~Moazzezi, ``Recognizing functions in binaries
  with neural networks,'' in \emph{24th USENIX security symposium (USENIX
  Security 15)}, 2015, pp. 611--626.

\end{thebibliography}
